docker build -t <image> .       # Create image using this directory's Dockerfile
docker run -p 4000:80 <image>      # Run "friendlyhello" mapping port 4000 to 80
docker run -d -p 4000:80 <image>              # Same thing, but in detached mode
docker container ls                                # List all running containers
docker container ls -a             # List all containers, even those not running
docker container ls -q                          # list all running container ids
docker container stop <hash>           # Gracefully stop the specified container
docker container kill <hash>         # Force shutdown of the specified container
docker container rm <hash>        # Remove specified container from this machine
docker container rm $(docker container ls -a -q)         # Remove all containers
docker image ls -a                             # List all images on this machine
docker image rm <image id>            # Remove specified image from this machine
docker image rm $(docker image ls -a -q)   # Remove all images from this machine

docker login             # Log in this CLI session using your Docker credentials
docker tag <image> username/repository:tag  # Tag <image> for upload to registry
docker push username/repository:tag            # Upload tagged image to registry
docker run username/repository:tag                   # Run image from a registry

docker swarm init --advertise-addr <HOST IP>         #create a swarm on the host
docker stack ls                                            # List stacks or apps
docker stack deploy -c <composefile> <appname>  # Run the specified Compose file
docker stack ps <service>                               # display cluster detail
docker service ls                 # List running services associated with an app
docker stacke services <service>               # dicplays your cluster info
docker service ps <service>                  # List tasks associated with an app
docker inspect <task or container>                   # Inspect task or container
docker container ls -q                                      # List container IDs
docker stack rm <appname>                             # Tear down an application
docker swarm leave --force      # Take down a single node swarm from the manager

docker-compose start
docker-compose stop
docker-compose pause
docker-compose unpause
docker-compose ps
docker-compose up
docker-compose down

docker volume prune                                         # remove all vomumes
docker system prune                  # shudown containers and erase local images
docker network prune                        # down and errase the network bridge
